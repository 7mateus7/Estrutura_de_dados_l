VETOR - TAD - Tipo abstratos de dados
Posições de memoria diferentes
Encadeamento de memória que não é organizado.

Iremos trabalhar dimensionando os slotes de memória ram

ESTRUTURA DE DADOS

Fila
Pilha
Lista
Trabalharmos sem Descritor e com descritor

Sem descritor - Variáveis simples
Com descritor - Trabalhamos com um objeto

Forma estática 
Forma dinâmica

1 prova 
Demais notas de trabalho

Fila - O primeira a entrar é o primeiro a sair = PEPS
First In - First Out = FIFO	

Alocação dinâmica
Grafos



==========================AULA 02=============================

Last in last out - Último que entra é o primeiro que saí


====================AULA 03===================================

Criação de Fila sem descrito

const variável = [numero];


Lista tem que estar ordenada

Inserindo o número já ordenado

Contador de número da lista. ex= QTD= 4

Remoção = Solicito qual número da lista eu quero remover

Após a remoção, todos os números avançam para a posição anterior


===============AULA 05=======================================
Software para venda de ingresso
Locais diferentes
Geral - 2 tipos de torcedores
Ingressos: Entregue umas pilhas de ingresso
O torcedor entra na fila
Compra e remove a pilha o ingresso
e escolha de uma lista, aonde ele quer sentar [posição]
O sócio tem vantagem em comparação com os torcedores


==================AULA 06==================================
Descritor = Record

Ex:
TFila = Record
  fila:array[]:integer
  posição,entregantes,saintes,evasao:integer
  tempo médio: real
End;

fila.posicao:=

fila.fila[i]:=

fila.fila[fila.posicao]


==================AULA 08==================================
Finalizamos pilha sem descritor
Ficaria muito inviável em um sistema muito complexo

Solução = DESCRITORES

Type
  TFila = Record
	vet: array[1..X] of integer;
	tma: integer;
 End;
Var
  Fila : TFila;


Passamos a fila inteira por parâmetro

Vetor é uma variável estática

ALOCAÇÂO DINÂMICA
-ponteiro

Limite passa a ser memória RAM

Nulo -> nil
Aloca -> new
Desaloca -> dispose

Vetor é um vetor que pode ser acessado diretamente

Mas agora será acessado sequencialmente

Ex:
Quando a fila está vazia. Fila:=nil

Alocar espaço na memória new(variável);

Verificar se o espeço está vazio
  If variável = nil then
   Write('memória cheia')
 Else
   variável¹.dados:= elemento
   variavel¹.prox:=nil;
   f:=variavel¹

Escrevendo
   variavel:=f;
   While variavel<>nil do
     Begin
     	write(variavel);
	variável:=variavel^.prox
     End;

Removendo
  variável:=f
  f:=f^.prox 
  dispose(variavel)
 




 
